{
  "name": "postgresql-schema-sync",
  "displayName": "PostgreSQL Schema Compare & Sync",
  "description": "Advanced PostgreSQL schema comparison and synchronization extension for Visual Studio Code with enterprise-grade features",
  "version": "1.0.0",
  "publisher": "postgresql-schema-sync",
  "icon": "resources/icon.png",
  "engines": {
    "vscode": "^1.104.0",
    "node": ">=22.0.0"
  },
  "categories": [
    "Visualization",
    "Other"
  ],
  "keywords": [
    "postgresql",
    "postgres",
    "database",
    "schema",
    "comparison",
    "synchronization",
    "migration",
    "sql"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "views": {
      "explorer": [
        {
          "id": "postgresqlExplorer",
          "name": "PostgreSQL Explorer",
          "icon": "$(database)",
          "contextualTitle": "PostgreSQL Explorer"
        }
      ]
    },
    "commands": [
      {
        "command": "postgresql.addConnection",
        "title": "Add Connection",
        "category": "PostgreSQL",
        "icon": "$(add)"
      },
      {
        "command": "postgresql.editConnection",
        "title": "Edit Connection",
        "category": "PostgreSQL",
        "icon": "$(edit)"
      },
      {
        "command": "postgresql.removeConnection",
        "title": "Remove Connection",
        "category": "PostgreSQL",
        "icon": "$(remove)"
      },
      {
        "command": "postgresql.testConnection",
        "title": "Test Connection",
        "category": "PostgreSQL",
        "icon": "$(check)"
      },
      {
        "command": "postgresql.refreshExplorer",
        "title": "Refresh Explorer",
        "category": "PostgreSQL",
        "icon": "$(refresh)"
      },
      {
        "command": "postgresql.browseSchema",
        "title": "Browse Schema",
        "category": "PostgreSQL",
        "icon": "$(search)"
      },
      {
        "command": "postgresql.compareSchemas",
        "title": "Compare Schemas",
        "category": "PostgreSQL",
        "icon": "$(diff)"
      },
      {
        "command": "postgresql.generateMigration",
        "title": "Generate Migration",
        "category": "PostgreSQL",
        "icon": "$(file-code)"
      },
      {
        "command": "postgresql.executeMigration",
        "title": "Execute Migration",
        "category": "PostgreSQL",
        "icon": "$(run)"
      },
      {
        "command": "postgresql.previewMigration",
        "title": "Preview Migration",
        "category": "PostgreSQL",
        "icon": "$(eye)"
      },
      {
        "command": "postgresql.rollbackMigration",
        "title": "Rollback Migration",
        "category": "PostgreSQL",
        "icon": "$(undo)"
      },
      {
        "command": "postgresql.viewObjectDetails",
        "title": "View Object Details",
        "category": "PostgreSQL",
        "icon": "$(info)"
      },
      {
        "command": "postgresql.showHelp",
        "title": "Show Help",
        "category": "PostgreSQL",
        "icon": "$(question)"
      },
      {
        "command": "postgresql.showLogs",
        "title": "Show Logs",
        "category": "PostgreSQL",
        "icon": "$(output)"
      },
      {
        "command": "postgresql.openSettings",
        "title": "Open Settings",
        "category": "PostgreSQL",
        "icon": "$(settings-gear)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "postgresql.addConnection",
          "when": "view == postgresqlExplorer",
          "group": "navigation"
        },
        {
          "command": "postgresql.refreshExplorer",
          "when": "view == postgresqlExplorer",
          "group": "navigation"
        },
        {
          "command": "postgresql.browseSchema",
          "when": "view == postgresqlExplorer && viewItem == database",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "postgresql.editConnection",
          "when": "view == postgresqlExplorer && viewItem == connection",
          "group": "inline"
        },
        {
          "command": "postgresql.removeConnection",
          "when": "view == postgresqlExplorer && viewItem == connection",
          "group": "inline"
        },
        {
          "command": "postgresql.testConnection",
          "when": "view == postgresqlExplorer && viewItem == connection",
          "group": "inline"
        },
        {
          "command": "postgresql.compareSchemas",
          "when": "view == postgresqlExplorer && viewItem =~ /^(database|schema)$/",
          "group": "comparison"
        },
        {
          "command": "postgresql.viewObjectDetails",
          "when": "view == postgresqlExplorer && viewItem =~ /^(table|view|function|procedure|sequence|type|domain|collation|extension|role|tablespace)$/",
          "group": "details"
        }
      ],
      "commandPalette": [
        {
          "command": "postgresql.addConnection",
          "when": "workspaceState.postgresql.connectionsExist == false"
        },
        {
          "command": "postgresql.compareSchemas",
          "when": "workspaceState.postgresql.connectionsExist == true"
        },
        {
          "command": "postgresql.generateMigration",
          "when": "workspaceState.postgresql.comparisonExists == true"
        },
        {
          "command": "postgresql.executeMigration",
          "when": "workspaceState.postgresql.migrationExists == true"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "PostgreSQL Schema Compare & Sync",
      "properties": {
        "postgresql-schema-sync.compare.mode": {
          "type": "string",
          "default": "strict",
          "enum": [
            "strict",
            "lenient"
          ],
          "enumDescriptions": [
            "Exact comparison including whitespace and formatting",
            "Ignore formatting differences and focus on structure"
          ],
          "description": "Default comparison mode for schema comparisons"
        },
        "postgresql-schema-sync.compare.ignoreSchemas": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "information_schema",
            "pg_catalog",
            "pg_toast"
          ],
          "description": "Schemas to ignore during comparison"
        },
        "postgresql-schema-sync.migration.dryRun": {
          "type": "boolean",
          "default": true,
          "description": "Enable dry-run mode for migration preview"
        },
        "postgresql-schema-sync.migration.batchSize": {
          "type": "number",
          "default": 50,
          "minimum": 10,
          "maximum": 200,
          "description": "Number of operations per migration batch"
        },
        "postgresql-schema-sync.notifications.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable notifications for operation status"
        },
        "postgresql-schema-sync.theme.colorScheme": {
          "type": "string",
          "default": "auto",
          "enum": [
            "auto",
            "light",
            "dark"
          ],
          "description": "Color scheme for the extension UI"
        },
        "postgresql-schema-sync.debug.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging"
        },
        "postgresql-schema-sync.debug.logLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "trace",
            "debug",
            "info",
            "warn",
            "error"
          ],
          "description": "Log level for debug output"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "test:unit": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e",
    "build:dotnet": "node build-dotnet.js",
    "build:all": "npm run build:dotnet && npm run compile",
    "clean": "rimraf bin out"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "24.5.2",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.104.0",
    "@typescript-eslint/eslint-plugin": "^8.44.1",
    "@typescript-eslint/parser": "^8.44.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.10",
    "eslint": "^9.36.0",
    "npm-run-all": "^4.1.5",
    "sinon": "^21.0.0",
    "typescript": "^5.9.2",
    "@vscode/vsce": "^3.6.2",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.12",
    "ts-jest": "^29.1.2",
    "jest-environment-node": "^29.7.0",
    "@types/node": "24.5.2",
    "supertest": "^6.3.4",
    "ts-node": "^10.9.2",
    "edge-js": "^18.1.0",
    "@types/edge-js": "^1.0.0",
    "rimraf": "^5.0.5"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/chaluvadis/postgresql-schema-sync.git"
  },
  "bugs": {
    "url": "https://github.com/chaluvadis/postgresql-schema-sync/issues"
  },
  "homepage": "https://github.com/chaluvadis/postgresql-schema-sync#readme"
}